# language: node_js
# node_js: 10.2.1
# os: osx
# osx_image: xcode10.1
# env: DEVICE=12.1
# before_script:
#   - rm -rf package-lock.json
#   - rm -rf node_modules
#   - npm i
#   - npm install -g react-native-cli
#   - react-native link
#   - du -sh node_modules/react-native-elastos-wallet-core/lib/ios/libspvsdk.a
# script:
#   - react-native start &
#   - sleep 120
#   - npm run test-ios


# matrix:
#   include:
#     - language: objective-c
#       os: osx
#       osx_image: xcode10.1
#       env: DEVICE=12.1
#       branches:
#         only:
#         - master
#       env:
#         global:
#         - NODE_VERSION=10.2.1
#       before_install:
#         - brew install git-lfs
#       install:
#         - brew tap wix/brew
#         - brew install applesimutils
#         - git lfs pull
#         - pwd
#         - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash
#         - export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
#         - nvm install 10.2.1
#         - nvm use 10.2.1
#         - nvm alias default 10.2.1
#         - npm install -g react-native-cli
#         - npm install -g detox-cli
#         - npm install
#         - cd node_modules/react-native-elastos-wallet-core/lib/ios/
#         - rm libspvsdk.a
#         - wget https://ademcan.net/libspvsdk.a
#         - cd /Users/travis/build/ademcan/elastos-unity-wallet-demo
#         - ls node_modules/react-native-elastos-wallet-core/lib/ios/
#         - du -sh node_modules/react-native-elastos-wallet-core/lib/ios/libspvsdk.a
#         - react-native link
#       script:
#         - detox build -c ios.sim.release
#         - detox test -c ios.sim.release --cleanup

#     - language: android
#       dist: trusty
#       android:
#         components:
#         - tools
#         - platform-tools
#         - build-tools-27.0.3
#         - android-27
#         - extra-google-google_play_services
#         - extra-google-m2repository
#         - extra-android-m2repository
#         - sys-img-x86-android-26
#         - sys-img-x86-android-28
#       branches:
#         only:
#         - master
#       env:
#         global:
#         - NODE_VERSION=10.2.1
#       install:
#         - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash
#         - export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
#         - nvm install 10.2.1
#         - nvm use 10.2.1
#         - nvm alias default 10.2.1
#         - npm install -g react-native-cli
#         - npm install -g detox-cli
#         - npm install
#         - react-native link
#         - yes | sudo sdkmanager --licenses 
#         - echo y | sdkmanager 'ndk-bundle'
#       script:
#         - detox build -c android.emu.release
#         - detox test -c android.emu.release --cleanup
        
matrix:
  include:
    language: android
    dist: trusty
    jdk:
    - oraclejdk8
    env:
      # global:
      # - ANDROID_API_LEVEL=27
      # - ANDROID_BUILD_TOOLS_VERSION=27.0.3
      # - NODE_VERSION=10.2.1
      # - ADB_INSTALL_TIMEOUT=8
      # - ABI=x86
      # - EMU_FLAVOR=default # use google_apis flavor if no default flavor emulator
      # # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
      # - ANDROID_HOME=/usr/local/android-sdk
      # - TOOLS=${ANDROID_HOME}/tools
      # - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
      # - API=27
    android:
      components:
      - tools # to get the new `repository-11.xml`
      - tools # see https://github.com/travis-ci/travis-ci/issues/6040#issuecomment-219367943)
      - platform-tools
      - extra-google-google_play_services
      - extra-google-m2repository
      - extra-android-m2repository
      - build-tools-25.0.0
      - build-tools-27.0.3
      - android-27
      - android-25
      - android-22 # Android platform used by your alternative emulator
      - sys-img-armeabi-v7a-android-22
    # android:
    #   components:
      
    #   - tools
    #   - android-$ANDROID_API_LEVEL
    #   - platform-tools
    #   # - tools
    #   - build-tools-$ANDROID_BUILD_TOOLS_VERSION
      
    #   # - android-28
    #   # - add-on
    #   # - extra
    #   # - extra-android-support
    #   - extra-google-google_play_services
    #   - extra-google-m2repository
    #   - extra-android-m2repository
    #   - sys-img-x86-android-$ANDROID_API_LEVEL
    #   # - sys-img-x86-android-27
    #   # - sys-img-armeabi-v7a-google_apis-26
    #   - sys-img-armeabi-v7a-google_apis-$ANDROID_API_LEVEL
    # branches:
    #   only:
    #   - master
    # licenses:
    #   - 'android-sdk-preview-license-.+'
    #   - 'android-sdk-license-.+'
    #   - 'google-gdk-license-.+'
    install:
      # - export ANDROID_SDK_ROOT=$ANDROID_HOME
      - echo y | sdkmanager "ndk-bundle"
      # - echo y | sdkmanager "platforms;android-27"
      - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash
      - export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
      - nvm install 10.2.1
      - nvm use 10.2.1
      - nvm alias default 10.2.1
      - npm install -g react-native-cli
      - npm install -g detox-cli
      - npm install
      - react-native link

    #   # - echo 'count=0' > /home/travis/.android/repositories.cfg # Avoid harmless sdkmanager warning 
    #   - echo y | sdkmanager 'ndk-bundle'
      - echo y | sdkmanager 'cmake;3.6.4111459'
    #   - echo y | sdkmanager 'lldb;3.0'
    #   # - echo y | sdkmanager "platform-tools" >/dev/null
    #   # - echo y | sdkmanager "tools" >/dev/null # A second time per Travis docs, gets latest versions
      - echo y | sdkmanager "build-tools;27.0.3" >/dev/null # Implicit gradle dependency - gradle drives changes
      - echo y | sdkmanager "platforms;android-27" # We need the API of the emulator we will run
    #   # - echo y | sdkmanager "platforms;android-28" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties
    #   # - echo y | sdkmanager --channel=4 "emulator" >/dev/null # Use canary channel to get emulator 29.x for x86_64 image support
    #   # - echo y | sdkmanager "extras;android;m2repository" >/dev/null
    #   # - echo y | sdkmanager "system-images;android-26;default;x86" >/dev/null # install our emulator

    #   - echo y | sdkmanager "system-images;android-$API;$EMU_FLAVOR;$ABI" # install our emulator
    #   - emulator -list-avds
      # - echo no | avdmanager create avd --force -n test -k "system-images;android-$API;$EMU_FLAVOR;$ABI" -c 10M
      # - emulator -verbose -avd test -no-accel -no-snapshot -no-window $AUDIO -camera-back none -camera-front none -selinux permissive -qemu -m 2048 &
      # - android-wait-for-emulator
      # - adb shell input keyevent 82 &
      # - cat /home/travis/.android/avd/test.avd/config.ini
      # - echo 'skin.name=1920x1080' >> /home/travis/.android/avd/test.avd/config.ini
      # - echo 'hw.lcd.height=1920' >> /home/travis/.android/avd/test.avd/config.ini
      # - echo 'hw.lcd.width=1080' >> /home/travis/.android/avd/test.avd/config.ini
      # - cat /home/travis/.android/avd/test.avd/config.ini
    
    # before_script:
    #   - echo no | android create avd --force -n test -t android-27 --abi x86 -c 100M
    #   - emulator -avd test -no-audio -no-window &
    #   - android-wait-for-emulator
    #   - adb shell input keyevent 82 &

    before_script:
      - echo no | android create avd --force -n  emulator-5554 -t android-22 --abi armeabi-v7a
      - emulator -avd  emulator-5554 -no-skin -no-audio -no-window &
      - android-wait-for-emulator
      - adb shell input keyevent 82 &

    script:
      - adb devices
      # - yes | sudo sdkmanager --licenses 
      - detox build -c android.emu.release
      - detox test -c android.emu.release --cleanup